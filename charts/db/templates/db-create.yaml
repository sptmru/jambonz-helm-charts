apiVersion: batch/v1
kind: Job
metadata:
  name: db-create-{{ .Release.Revision }}
  namespace: {{ dig "global" "db" "namespace" .Release.Namespace (.Values | merge (dict)) | quote }}
  labels:
{{ include "common.labels" . | indent 4 }}
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
        {{- if .Values.global.podAnnotations }}
        {{ toYaml .Values.global.podAnnotations | default "" | nindent 8 }}
        {{- end }}
        {{- if .Values.mysql.podAnnotations }}
        {{ toYaml .Values.mysql.podAnnotations | default "" | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.mysql.nodeSelector }}
      nodeSelector:
        {{ .Values.mysql.nodeSelector.label }}: {{ .Values.mysql.nodeSelector.value | quote }}      
      {{- end }}
      containers:
        - name: db 
          image: {{ .Values.dbcreate.image }}
          env:
            - name: JAMBONES_MYSQL_HOST
              value: {{ .Values.mysql.host }}
            - name: JAMBONES_MYSQL_DATABASE
              value: {{ .Values.mysql.database }}
            - name: JAMBONES_MYSQL_USER
              value: {{ .Values.mysql.user }}
            - name: JAMBONES_SIP_DOMAIN
              value: {{ .Values.dbcreate.sipDomain }}
            - name: JAMBONES_ACCOUNT_SID
              value: {{ .Values.dbcreate.jambonzAccountSid }}
            - name: JAMBONES_APPLICATION_SID
              value: {{ .Values.dbcreate.jambonzApplicationSid }}
            - name: JAMBONES_API_KEY
              value: {{ .Values.dbcreate.jambonzApiKey }}
            - name: BASE_IVR_APP_URL
              value: {{ .Values.dbcreate.baseIvrApiUrl }}
            - name: JAMBONES_MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: MYSQL_PASSWORD
          imagePullPolicy: Always
      restartPolicy: OnFailure
